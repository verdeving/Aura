name: CI

on:
  push:
  pull_request:

jobs:
  windows_build:
    runs-on: windows-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Install CMake
        run: Invoke-WebRequest -Uri "https://github.com/Kitware/CMake/releases/download/v4.1.2/cmake-4.1.2-windows-x86_64.zip" -OutFile cmake.zip
        shell: powershell
      
      - name: Extract CMake
        run: Expand-Archive cmake.zip -DestinationPath C:\CMake
        shell: powershell
      
      - name: Add CMake to PATH
        run: echo "C:\CMake\cmake-4.1.2-windows-x86_64\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        shell: powershell

      - name: Install MSYS2
        run: choco install msys2 -y
        shell: powershell

      - name: Update MSYS2
        run: C:\tools\msys64\usr\bin\bash -lc "pacman -Syu --noconfirm"
        shell: powershell
      
      - name: Install MinGW
        run: C:\tools\msys64\usr\bin\bash -lc "pacman -S --noconfirm mingw-w64-x86_64-gcc"
        shell: powershell

      - name: Add MinGW to PATH
        run: echo "C:\tools\msys64\mingw64\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        shell: powershell
      
      - name: Install LLVM
        run: Invoke-WebRequest -Uri "https://github.com/llvm/llvm-project/releases/download/llvmorg-21.1.3/LLVM-21.1.3-win64.exe" -OutFile "LLVM-21.1.3-win64.exe"
        shell: powershell

      - name: Extract LLVM
        run: 7z x LLVM-21.1.3-win64.exe -oC:\LLVM
        shell: powershell

      - name: Add LLVM to PATH
        run: echo "C:\LLVM\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        shell: powershell

      - name: CMake clang debug configuration
        run: cmake -D CMAKE_C_COMPILER=clang -D CMAKE_CXX_COMPILER=clang++ -D CMAKE_LINKER=lld -S . -B Build -G Ninja -D CMAKE_BUILD_TYPE=Debug -D AURA_ENABLE_TESTING=On
        shell: powershell

      - name: Ninja clang debug compilation
        run: ninja -C Build
        shell: powershell
      
      - name: CMake clang release configuration
        run: cmake -D CMAKE_C_COMPILER=clang -D CMAKE_CXX_COMPILER=clang++ -D CMAKE_LINKER=lld -S . -B Build -G Ninja -D CMAKE_BUILD_TYPE=Release -D AURA_ENABLE_TESTING=On
        shell: powershell

      - name: Ninja release compilation
        run: ninja -C Build
        shell: powershell